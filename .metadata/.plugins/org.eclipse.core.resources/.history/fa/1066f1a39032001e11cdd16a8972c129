package com.worldhourproject.dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;

import com.worldhourproject.bean.CountryBean;
import com.worldhourproject.utility.JDBCDataSource;

public class AdminDAO {
	private static final String SELECT_COUNTRY_BY_ID = "select * from country_date_time where id=?";
	private static final String SELECT_ALL_COUNTRIES = "select * from country_date_time";
	
	private static final String INSERT_COUNTRY = "insert into country_date_time (country_name, country_date_time) values(?, ?)";
	
	private static final String UPDATE_ALL_COUNTRY_INFO = "update country_date_time set country_name = ?, country_date_time = ? where id = ?";
	private static final String UPDATE_COUNTRY_NAME = "update country_date_time set country_name = ? where id = ?";
	private static final String UPDATE_COUNTRY_DATE_TIME = "update country_date_time set country_date_time = ? where id = ?";
	
	private static final String DELETE_COUNTRY = "delete from country_date_time where id = ?";
	
	public static int nextId() {
		int pk = 0;
		Connection con;
		try {
			con = JDBCDataSource.getConn();
			PreparedStatement stmt = con.prepareStatement("select Max(id) from country_date_time");
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				pk = rs.getInt(1);
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return pk+1;
	}
	
	public static void insertCountry(CountryBean country) {
		//CountryBean res = null;
		Connection con;
		try {
			con = JDBCDataSource.getConn();
			//PreparedStatement stmt = con.prepareStatement("insert into country_date_time values(?,?,?)");
			//stmt.setInt(1, nextId());
			PreparedStatement stmt = con.prepareStatement(INSERT_COUNTRY);
			stmt.setString(1, country.getCountry_name());
			LocalDateTime now = LocalDateTime.now();
			DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
			String currDateStr = dtf.format(now);
			stmt.setString(2, currDateStr);
			stmt.executeUpdate();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public static CountryBean selectCountryById(int id) {
		CountryBean country = null;
		Connection con;
		try {
			con = JDBCDataSource.getConn();
			//PreparedStatement stmt = con.prepareStatement("insert into country_date_time values(?,?,?)");
			//stmt.setInt(1, nextId());
			PreparedStatement stmt = con.prepareStatement(SELECT_COUNTRY_BY_ID);
			stmt.setInt(1, id);
			ResultSet rs = stmt.executeQuery();
			
			while(rs.next()) {
				String name = rs.getString("country_name");
				String date_time = rs.getString("country_date_time");
				country = new CountryBean(name, date_time);
				
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return country;
	}
	
	public List<CountryBean> selectAllCountries() {
		List<CountryBean> countries = new ArrayList<CountryBean>();
		Connection con;
		try {
			con = JDBCDataSource.getConn();
			//PreparedStatement stmt = con.prepareStatement("insert into country_date_time values(?,?,?)");
			//stmt.setInt(1, nextId());
			PreparedStatement stmt = con.prepareStatement(SELECT_ALL_COUNTRIES);
			ResultSet rs = stmt.executeQuery();
			
			while(rs.next()) {
				int id = rs.getInt("id");
				String name = rs.getString("country_name");
				String date_time = rs.getString("country_date_time");
				countries.add(new CountryBean(id, name, date_time));
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return countries;
	}
	
	public boolean updateAllCountryInfo(CountryBean country) {
		boolean rowUpdated = false;
		Connection con;
		try {
			con = JDBCDataSource.getConn();
			//PreparedStatement stmt = con.prepareStatement("insert into country_date_time values(?,?,?)");
			//stmt.setInt(1, nextId());
			PreparedStatement stmt = con.prepareStatement(UPDATE_ALL_COUNTRY_INFO);
			stmt.setString(1, country.getCountry_name());
			stmt.setString(2, country.getCountry_date_time());
			stmt.setInt(3, country.getId());
			
			rowUpdated = stmt.executeUpdate() > 0;
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return rowUpdated;
	}
	
	public boolean updateCountryName(CountryBean country) {
		boolean rowUpdated = false;
		Connection con;
		try {
			con = JDBCDataSource.getConn();
			//PreparedStatement stmt = con.prepareStatement("insert into country_date_time values(?,?,?)");
			//stmt.setInt(1, nextId());
			PreparedStatement stmt = con.prepareStatement(UPDATE_COUNTRY_NAME);
			stmt.setString(1, country.getCountry_name());
			stmt.setInt(2, country.getId());
			
			rowUpdated = stmt.executeUpdate() > 0;
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return rowUpdated;
	}
	
	public boolean updateCountryDateTime(CountryBean country) {
		boolean rowUpdated = false;
		Connection con;
		try {
			con = JDBCDataSource.getConn();
			//PreparedStatement stmt = con.prepareStatement("insert into country_date_time values(?,?,?)");
			//stmt.setInt(1, nextId());
			PreparedStatement stmt = con.prepareStatement(UPDATE_COUNTRY_DATE_TIME);
			stmt.setString(1, country.getCountry_date_time());
			stmt.setInt(2, country.getId());
			
			rowUpdated = stmt.executeUpdate() > 0;
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return rowUpdated;
	}
	
	public boolean deleteCountry(int id) {
		boolean rowDeleted = false;
		Connection con;
		try {
			con = JDBCDataSource.getConn();
			//PreparedStatement stmt = con.prepareStatement("insert into country_date_time values(?,?,?)");
			//stmt.setInt(1, nextId());
			PreparedStatement stmt = con.prepareStatement(DELETE_COUNTRY);
			stmt.setInt(1, id);
			
			rowDeleted = stmt.executeUpdate() > 0;
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return rowDeleted;
	}
}
